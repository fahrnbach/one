name: sesame-promote-prod
env:
  APP_ID: sesame.jiode.one
  APP_PATH: apps/core/portfolio/sesame.jiode.one
  PUBLIC_DIR: apps/core/portfolio/sesame.jiode.one/public
  WRANGLER_CONFIG: apps/core/portfolio/sesame.jiode.one/sesame-meta-worker/wrangler.toml
  PRODUCTION_BUCKET: sesame-data
  PRODUCTION_HOST: ${{ vars.PRODUCTION_HOST || 'sesame.jiode.one' }}

on:
  workflow_dispatch:
    inputs:
      release_sha:
        description: "Commit SHA to promote (must exist in staging artifacts)"
        required: true
      confirm:
        description: 'Type "I understand" to deploy to prod'
        required: true

concurrency:
  group: ${{ github.workflow }}-prod
  cancel-in-progress: false

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - run: |
          if [ "${{ github.event.inputs.confirm }}" != "I understand" ]; then
            echo "Confirmation mismatch. Aborting."; exit 1; fi

  promote:
    needs: preflight
    uses: ./.github/workflows/_worker-promote.yml
    with:
      app_id:          ${{ env.APP_ID }}
      wrangler_config: ${{ env.WRANGLER_CONFIG }}
      release_sha:     ${{ inputs.release_sha }}
      verify_slsa:     true
      environment:     production
      deploy:          true
      seed_r2:         true
      r2_bucket:       ${{ env.PRODUCTION_BUCKET }}
      seed_public_dir: ${{ env.PUBLIC_DIR }}
    secrets:
      CLOUDFLARE_API_TOKEN:  ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    # This targets the protected "production" environment defined inside _worker-promote.yml

  # SESAME POST-PROMOTE STEPS
  # These are specific to Sesame and not part of the generic worker promotion workflow.
  post_sync:
    needs: promote
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_API_TOKEN:  ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      RELEASE_SHA: ${{ github.event.inputs.release_sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Download promoted artifact
        uses: actions/download-artifact@v4
        with:
          name: sesame-worker-${{ env.RELEASE_SHA }}
          path: dist/releases/${{ env.RELEASE_SHA }}

      - name: Push public assets + data.json to R2 (prod)
        uses: ./.github/actions/sesame/r2-push
        with:
          bucket:           ${{ env.PRODUCTION_BUCKET }}
          public_dir:       ${{ env.PUBLIC_DIR }}
          data_json_path:   ${{ env.APP_PATH }}/data.json
          wrangler_config:  ${{ env.WRANGLER_CONFIG }}
          wrangler_version: '4.31.0'


# app specific testing goes here
  smoke-test:
      needs: promote
      runs-on: ubuntu-latest
      env:
        HOST: ${{ vars.PRODUCTION_HOST }}
      steps:
        - name: test /health
          run: |
            set -euo pipefail
            code=$(curl -s -o /dev/null -w "%{http_code}" "https://${HOST}/health")
            echo "HTTP ${code} /health"
            test "$code" = "200"
            body=$(curl -s "https://${HOST}/health")
            echo "Body: $body"
            [[ "$body" =~ OK|ok ]]

        - name: test R2 control endpoints
          run: |
            set -euo pipefail
            # These should be safe GETs that your worker exposes for diagnostics (adjust to your routes)
            curl -fsSL "https://${HOST}/__r2get" | grep -qi "GET: OK"
            curl -fsSL "https://${HOST}/__r2list" | grep -qi "data.json"

        - name: test image exists
          run: |
            set -euo pipefail
            # Check one representative image you seeded
            code=$(curl -s -o /dev/null -w "%{http_code}" "https://${HOST}/images/background.webp")
            echo "HTTP ${code} /images/background.webp"
            test "$code" = "200"
